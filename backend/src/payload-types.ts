/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    experience: Experience;
    media: Media;
    pages: Page;
    projects: Project;
    tags: Tag;
    users: User;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    'social-media': SocialMedia;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experience".
 */
export interface Experience {
  id: number;
  title: string;
  description?: string | null;
  slug: string;
  time?: {
    startingTime?: string | null;
    endingTime?: string | null;
  };
  position?: ('Front-end Developer' | 'UI-UX Designer' | 'Full-stack Developer' | 'Wordpress Developer')[] | null;
  projects?: (number | Project)[] | null;
  tools?: (number | Tag)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  name: string;
  description?: string | null;
  slug: string;
  link?: string | null;
  time?: {
    startingTime?: string | null;
    endingTime?: string | null;
  };
  position?: ('Front-end Developer' | 'UI-UX Designer' | 'Full-stack Developer' | 'Wordpress Developer')[] | null;
  thumbnail?: (number | null) | Media;
  tools?: (number | Tag)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  title?: string | null;
  type: 'image' | 'pdf';
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    title: string;
    description: string;
    subDescription?: string | null;
  };
  layout: (
    | {
        relationTo?: ('projects' | 'experience') | null;
        limit?: number | null;
        seeMore: {
          label?: string | null;
          url: string;
        };
        populatedDocs?:
          | (
              | {
                  relationTo: 'projects';
                  value: number | Project;
                }
              | {
                  relationTo: 'experience';
                  value: number | Experience;
                }
            )[]
          | null;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'archive-block';
      }
    | {
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content-block';
      }
    | {
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'media-block';
      }
    | {
        menus?:
          | {
              link: {
                label?: string | null;
                url: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'menus-block';
      }
    | {
        link: {
          label?: string | null;
          url: string;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'call-to-action-block';
      }
  )[];
  publishedDate?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  avatar?: number | Media | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media".
 */
export interface SocialMedia {
  id: number;
  icons?:
    | {
        icon: {
          title?: string | null;
          image: number | Media;
          link: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}